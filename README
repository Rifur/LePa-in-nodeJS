An simple lexer and parser in nodejs. 
author: Rifur Ni, <Rifurdoma at gmail.com>

This program is written in node.js.
Usage: $nodejs main.js <source-code>

OUR GOAL: Read in a text file which describe BNF and tokens with our form, then translate to recursive descent parser.


SYNTAX FORM:
In test.js, there is described our token and BNF's form.

	%token
	{
		IDENTIFIER1 : /regular expression 1/, 
		IDENTIFIER1 : /regular expression 2/
	}

	%grammar
	{
		<symbol> : <nonterminal> "terminal" [<symbol> "terminal"] ;
	}


which is implemented a recursive descent parser in parser.js by hand.

DESCIRIPION: 
The main.js is the entry of program. It reads in <source-code> file as string given by argument. We need to include lex.js and parser.js which are lexical analyzer and syntax analyzer respectively. We send <source-code> into lexical analyzer by lex.input() method:

	 var lex = require('./lex.js');
	 var parser = require('./parser.js');
		// ...
	>lex.input(<source-code>);
	 parser.parse();

and running syntax anaylzer:

	 lex.input(<source-code>);
	>parser.parse();

Have fun :D
